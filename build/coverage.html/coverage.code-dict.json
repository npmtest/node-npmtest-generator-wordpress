{"/home/travis/build/npmtest/node-npmtest-generator-wordpress/test.js":"/* istanbul instrument in package npmtest_generator_wordpress */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/lib.npmtest_generator_wordpress.js":"/* istanbul instrument in package npmtest_generator_wordpress */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_generator_wordpress = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_generator_wordpress = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-generator-wordpress && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_generator_wordpress */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_generator_wordpress\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_generator_wordpress.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_generator_wordpress.rollup.js'] =\n            local.assetsDict['/assets.npmtest_generator_wordpress.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_generator_wordpress.__dirname + '/lib.npmtest_generator_wordpress.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/app/index.js":"/**================================\n * Setting up the basics\n **===============================*/\n\n// Requirements\nvar util = require('util'),\n\tpath = require('path'),\n\tfs = require('fs'),\n\tyeoman = require('yeoman-generator'),\n\twrench = require('wrench'),\n\tchalk = require('chalk'),\n\tmkdirp = require('mkdirp'),\n\tgit = require('simple-git')(),\n\twp = require('wp-util'),\n\twordpress = require('../util/wordpress'),\n\tart = require('../util/art'),\n\tLogger = require('../util/log'),\n\tConfig = require('../util/config');\n\n// Export the module\nmodule.exports = Generator;\n\n// Extend the base generator\nfunction Generator(args, options, config) {\n\tyeoman.generators.Base.apply(this, arguments);\n\n\t// Log level option\n\tthis.option('log', {\n\t\tdesc: 'The log verbosity level: [ verbose | log | warn | error ]',\n\t\tdefaults: 'log',\n\t\talias: 'l',\n\t\tname: 'level'\n\t});\n\n\t// Enable advanced features\n\tthis.option('advanced', {\n\t\tdesc: 'Makes advanced features available',\n\t\talias: 'a'\n\t});\n\n\t// Shortcut for --log=verbose\n\tthis.option('verbose', {\n\t\tdesc: 'Verbose logging',\n\t\talias: 'v'\n\t});\n\tif (this.options.verbose) {\n\t\tthis.options.log = 'verbose';\n\t}\n\n\t// Setup the logger\n\tthis.logger = Logger({\n\t\tlevel: this.options.log\n\t});\n\n\t// Log the options\n\ttry {\n\t\tthis.logger.verbose('\\nOptions: ' + JSON.stringify(this.options, null, '  '));\n\t} catch(e) {\n\t\t// This is here because when a generator is run by selecting it after running `yo`,\n\t\t// the options is a circular data structure, causing an error when converting to json.\n\t\t// Verbose cannot be called this way, so there is no need to log anything.\n\t}\n\n\t// Load the config files\n\tthis.conf = new Config();\n\n};\nutil.inherits(Generator, yeoman.generators.Base);\n\n/**================================\n * Easy as 1, 2, 3...err....9 maybe 10 or 11\n **===============================*/\n\n\n// Ask the user what they want done\nGenerator.prototype.ohTellMeWhatYouWantWhatYouReallyReallyWant = function() {\n\n\t// This is an async step\n\tvar done = this.async();\n\n\t// Display welcome message\n\tthis.logger.log(art.wp, {logPrefix: ''});\n\t\n\t// Get the current version number of wordpress\n\tthis.logger.verbose('Getting current WP version');\n\twordpress.getCurrentVersion(function(err, ver) {\n\t\tif (err) this.logger.warn('Error getting WP versions.  Falling back to ' + ver);\n\t\tthis.logger.verbose('Got current WP version: ' + ver);\n\t\tthis.conf.set('wpVer', ver);\n\t\tgetInput();\n\t}.bind(this));\n\n\t// Get the input\n\tvar getInput = function getInput() {\n\t\tthis.prompt(require('./prompts')(this.options.advanced, this.conf.get()), function(input) {\n\t\t\tthis.prompt([{\n\t\t\t\tmessage: 'Does this all look correct?',\n\t\t\t\tname: 'confirm',\n\t\t\t\ttype: 'confirm'\n\t\t\t}], function(i) {\n\t\t\t\tif (i.confirm) {\n\t\t\t\t\t// Set port\n\t\t\t\t\tvar portRegex = /:[\\d]+$/;\n\t\t\t\t\tvar port = input.url.match(portRegex);\n\t\t\t\t\tif (port) input.port = port[0].replace(':', '');\n\n\t\t\t\t\t// Remove port from url\n\t\t\t\t\tinput.url = input.url.replace(portRegex, '');\n\n\t\t\t\t\t// Set customDirs to true if installing as a submodule\n\t\t\t\t\tif (input.submodule) {\n\t\t\t\t\t\tinput.customDirs = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set dirs if custom dir's is not set\n\t\t\t\t\tif (!input.customDirs) {\n\t\t\t\t\t\tinput.wpDir = '.';\n\t\t\t\t\t\tinput.contentDir = 'wp-content';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a wordpress site instance\n\t\t\t\t\tthis.wpSite = new wp.Site({\n\t\t\t\t\t\tcontentDirectory: input.contentDir,\n\t\t\t\t\t\twpBaseDirectory: input.wpDir,\n\t\t\t\t\t\tdatabaseCredentials: {\n\t\t\t\t\t\t\thost: input.dbHost,\n\t\t\t\t\t\t\tuser: input.dbUser,\n\t\t\t\t\t\t\tpassword: input.dbPass,\n\t\t\t\t\t\t\tname: input.dbName,\n\t\t\t\t\t\t\tprefix: input.tablePrefix,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save the users input\n\t\t\t\t\tthis.conf.set(input);\n\t\t\t\t\tthis.logger.verbose('User Input: ' + JSON.stringify(this.conf.get(), null, '  '));\n\t\t\t\t\tthis.logger.log(art.go, {logPrefix: ''});\n\t\t\t\t\tdone();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log();\n\t\t\t\t\tgetInput();\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t}.bind(this);\n\n};\n\n// .gitignore\nGenerator.prototype.justIgnoreMe = function() {\n\tif (this.conf.get('git')) {\n\t\tthis.logger.verbose('Copying .gitignore file');\n\t\tthis.fs.copyTpl(this.templatePath('gitignore.tmpl'), this.destinationPath('.gitignore'), { conf: this.conf });\n\t}\n};\n\n// Git setup and initial commit of WP stuff\nGenerator.prototype.gitIsTheShit = function() {\n\n\t// Using Git? Init it...\n\tif (this.conf.get('git')) {\n\t\tvar done = this.async();\n\n\t\tthis.logger.log('Initializing Git');\n\t\tgit.init(function(err) {\n\t\t\tif (err) this.logger.error(err);\n\n\t\t\tthis.logger.verbose('Git init complete');\n\t\t\tdone();\n\t\t}.bind(this));\n\t}\n\n};\n\n// Setup Vagrant config\nGenerator.prototype.heIsSuchAVagrant = function() {\n\n\tif (this.conf.get('vagrant')) {\n\t\tthis.logger.log('Setting up Vagrant');\n\t\tthis.logger.verbose('Copying vagrant file');\n\t\tthis.fs.copyTpl(this.templatePath('Vagrantfile'), this.destinationPath('Vagrantfile'), this);\n\t\tthis.logger.verbose('Copying puppet files');\n\t\tthis.fs.copy(this.templatePath('puppet/'), this.destinationPath('puppet/'));\n\t\tthis.fs.copyTpl(this.templatePath('puppet/manifests/default.pp'), this.destinationPath('puppet/manifests/default.pp'), this);\n\t\tthis.logger.verbose('Finished setting up Vagrant');\n\t}\n\n};\n\n// Install wordpress\nGenerator.prototype.wordWhatUp = function() {\n\n\tvar done = this.async();\n\n\tif (this.conf.get('submodule')) {\n\t\tthis.logger.log('Installing WordPress ' + this.conf.get('wpVer') + ' as a submodule (be patient)');\n\t\tgit.submoduleAdd(wordpress.repo, this.conf.get('wpDir'), function(err) {\n\t\t\tif (err) this.logger.error(err);\n\n\t\t\tthis.logger.verbose('Submodule added');\n\t\t\tvar cwd = process.cwd();\n\t\t\tgit._baseDir = this.conf.get('wpDir');\n\t\t\tthis.logger.verbose('Checking out WP version ' + this.conf.get('wpVer'));\n\t\t\tgit.checkout(this.conf.get('wpVer'), function(err) {\n\t\t\t\tif (err) this.logger.error(err);\n\t\t\t\tgit._baseDir = cwd;\n\t\t\t\tthis.logger.verbose('WordPress installed');\n\t\t\t\tdone();\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\n\t} else {\n\n\t\tthis.logger.log('Installing WordPress ' + this.conf.get('wpVer'));\n\t\tthis.remote('wordpress', 'wordpress', this.conf.get('wpVer'), function(err, remote) {\n\t\t\tif (err) {\n\t\t\t\tthis.logger.error(err);\n\t\t\t\treturn done(err);\n\t\t\t}\n\t\t\tremote.directory('.', this.conf.get('wpDir'));\n\t\t\tthis.logger.log('WordPress installed');\n\t\t\tdone();\n\t\t}.bind(this));\n\n\t}\n\t\n};\n\n// Setup custom directory structure\nGenerator.prototype.somethingsDifferent = function() {\n\n\tif (this.conf.get('submodule') || this.conf.get('customDirs')) {\n\n\t\tthis.logger.verbose('Copying index.php');\n\t\tthis.fs.copyTpl(this.templatePath('index.php.tmpl'), this.destinationPath('index.php'), { conf: this.conf });\n\n\t\tthis.logger.log('Setting up the content directory');\n\t\tthis.remote('wordpress', 'wordpress', this.conf.get('wpVer'), function(err, remote) {\n\t\t\tremote.directory('wp-content', this.conf.get('contentDir'));\n\t\t\tthis.logger.verbose('Content directory setup');\n\t\t}.bind(this));\n\n\t}\n\n};\n\n// wp-config.php\nGenerator.prototype.muHaHaHaConfig = function() {\n\n\tvar done = this.async();\n\n\tthis.logger.log('Getting salt keys');\n\twp.misc.getSaltKeys(function(err, saltKeys) {\n\t\tif (err) {\n\t\t\tthis.logger.error('Failed to get salt keys, remember to change them.');\n\t\t}\n\t\tthis.logger.verbose('Salt keys: ' + JSON.stringify(saltKeys, null, '  '));\n\t\tthis.conf.set('saltKeys', saltKeys);\n\t\tthis.logger.verbose('Copying wp-config');\n\t\tthis.fs.copyTpl(this.templatePath('wp-config.php.tmpl'), this.destinationPath('wp-config.php'), { conf: this.conf });\n\t\tdone();\n\t}.bind(this));\n\n};\n\n// local-config.php\nGenerator.prototype.localConf = function() {\n\tif (this.conf.get('createLocalConfig')) {\n\t\tthis.logger.verbose('Copying local-config');\n\t\tthis.fs.copyTpl(this.templatePath('local-config.php.tmpl'), this.destinationPath('local-config.php'), { conf: this.conf });\n\t}\n};\n\n// Create Language directory\nGenerator.prototype.doveIlBagno = function() {\n\n\t// Only do this if the user specified a language\n\tif (this.conf.get('wpLang')) {\n\t\tthis.logger.log('Setting up locale files');\n\t\twp.locale.getLanguage(this.conf.get('wpLang'), this.conf.get('contentDir'), function (err) {\n\t\t\tif (err) this.logger.error(err);\n\t\t}.bind(this));\n\t}\n\n};\n\n// Write all these newly created files to disk so that the rest of the generator doesn't fail\nGenerator.prototype.doNotFearCommitment = function() {\n\n\tvar done = this.async();\n\n\tthis.logger.log('Writing WP files to disk')\n\n\tthis.fs.commit(function (err) {\n\t\tif (err) this.logger.error(err);\n\n\t\tthis.logger.verbose('Done WP writing files');\n\t\tdone();\n\t}.bind(this));\n};\n\n// Set some permissions\n/* @TODO Thinking that maybe permissions should be left up to the user \n   BUT, it seems that the theme stuff needs some permissions set to work....\n*/\nGenerator.prototype.thisIsSparta = function() {\n\n\tif (fs.existsSync('.')) {\n\t\tthis.logger.log('Setting Permissions: 0755 on .');\n\t\twrench.chmodSyncRecursive('.', 0755);\n\t\tthis.logger.verbose('Done setting permissions on .');\n\t}\n\n\tif (fs.existsSync(this.conf.get('contentDir'))) {\n\t\tthis.logger.log('Setting Permissions: 0775 on ' + this.conf.get('contentDir'));\n\t\twrench.chmodSyncRecursive(this.conf.get('contentDir'), 0775);\n\t\tthis.logger.verbose('Done setting permissions on ' + this.conf.get('contentDir'));\n\t}\n\n};\n\n// Commit the wordpress stuff\nGenerator.prototype.commitThisToMemory = function() {\n\n\tif (this.conf.get('git')) {\n\t\tvar done = this.async();\n\n\t\tthis.logger.verbose('Committing WP to Git');\n\t\tgit.add('.', function(err) {\n\t\t\tif (err) this.logger.error(err);\n\t\t}.bind(this)).commit('Installed wordpress', function(err, d) {\n\t\t\tif (err) this.logger.error(err);\n\t\t\tthis.logger.verbose('Done committing: ' + JSON.stringify(d, null, '  '));\n\t\t\tdone();\n\t\t}.bind(this));\n\t}\n\n};\n\n// Check that the database exists, create it otherwise\nGenerator.prototype.hazBaseData = function() {\n\n\tvar done = this.async();\n\tthis.wpSite.database.createIfNotExists(function(err) {\n\t\tif (err) {\n\t\t\tthis.logger.warn('Cannot access database');\n\t\t\tthis.logger.warn('Make sure you create the database and update the credentials in the wp-config.php');\n\t\t}\n\t\tdone();\n\t}.bind(this));\n\n};\n\n// Install and activate the theme\nGenerator.prototype.dumbledoreHasStyle = function() {\n\n\tif (this.conf.get('installTheme')) {\n\t\tvar done = this.async();\n\n\t\tthis.logger.log('Starting to install theme');\n\t\twordpress.installTheme(this, this.conf.get(), function() {\n\t\t\t//@TODO You need to run the install before doing this\n\t\t\t//see if I can get yeopress to do that.\n\t\t\t//wordpress.activateTheme(this.conf.get(), done);\n\t\t\tthis.logger.verbose('Theme install complete');\n\t\t\tdone();\n\t\t}.bind(this));\n\t}\n\n};\n\n// Write all the newly downloaded theme files to disk\nGenerator.prototype.gandalfGotThemSkillzTho = function() {\n\n\tif (this.conf.get('installTheme')) {\n\t\tvar done = this.async();\n\n\t\tthis.logger.log('Writing theme files to disk')\n\n\t\tthis.fs.commit(function (err) {\n\t\t\tif (err) this.logger.error(err);\n\n\t\t\tthis.logger.verbose('Done writing theme files');\n\t\t\tdone();\n\t\t}.bind(this));\n\t}\n\n};\n\n// Setup theme\nGenerator.prototype.dummyYouHaveToPlugItInFirst = function() {\n\n\tif (this.conf.get('installTheme')) {\n\t\tthis.logger.log('Starting theme setup');\n\t\twordpress.setupTheme(this, this.conf.get(), this.async());\n\t\tthis.logger.verbose('Theme setup complete');\n\t}\n\n};\n\n// Commit again with the template\nGenerator.prototype.gitMeMOARCommits = function() {\n\n\tif (this.conf.get('git') && this.conf.get('installTheme')) {\n\t\tvar done = this.async();\n\n\t\tthis.logger.verbose('Committing theme to Git');\n\t\tgit.add('.', function(err) {\n\t\t\tif (err) this.logger.error(err);\n\t\t}.bind(this)).commit('Installed theme', function(err, d) {\n\t\t\tif (err) this.logger.error(err);\n\n\t\t\tthis.logger.verbose('Done committing: ', JSON.stringify(d, null, '  '));\n\t\t\tdone();\n\t\t}.bind(this));\n\t}\n\n};\n\n// Run vagrant up\nGenerator.prototype.vagrantUp = function() {\n\tif (this.conf.get('vagrant')) {\n\t\tvar done = this.async();\n\t\tthis.logger.log('Running vagrant up');\n\t\tvar child = require('child_process').exec('vagrant up', function(err) {\n\t\t\tif (err) return this.logger.error(err);\n\t\t\tthis.logger.verbose('Finished running Vagrant');\n\t\t\tdone();\n\t\t}.bind(this));\n\t\tchild.on('error', function(err) {\n\t\t\tprocess.stderr.write(err);\n\t\t});\n\t\tchild.stdout.on('data', function(data) {\n\t\t\tprocess.stdout.write(data);\n\t\t});\n\t\tchild.stderr.on('data', function(err) {\n\t\t\tprocess.stderr.write(err);\n\t\t});\n\t}\n};\n\n// Save settings to .yeopress file\nGenerator.prototype.saveDaSettings = function() {\n\tthis.logger.log('Writing .yeopress file');\n\tthis.fs.writeJSON(this.destinationPath('.yeopress'), this.conf.get(), null, '\\t');\n\n\t// just go ahead and write this one to disk so we don't get a\n\t// weird \"create .yeopress\" at termination\n\tthis.fs.commit(function (err) {\n\t\tif (err) this.logger.error(err);\n\n\t\tthis.logger.verbose('Done writing .yeopress file');\n\t}.bind(this));\n};\n\n// All done\nGenerator.prototype.oopsIPeedMyself = function() {\n\tthis.logger.log(chalk.bold.green('\\nAll Done!!\\n------------------------\\n'), {logPrefix: ''});\n\tthis.logger.log('I tried my best to set things up, but I\\'m only human right? **wink wink**\\nSo, you should probably check your `wp-config.php` to make sure all the settings work on your environment.', {logPrefix: ''});\n\tthis.logger.log('Have fun pressing your words!\\n', {logPrefix: ''});\n};\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/util/wordpress.js":"var https = require('https'),\n\thttp = require('http'),\n\tfs = require('fs'),\n\tutil = require('util'),\n\tpath = require('path'),\n\tmysql = require('mysql'),\n\tchalk = require('chalk'),\n\texec = require('child_process').exec,\n\tEventEmitter = require('events').EventEmitter,\n\twordpressRepo = \"git://github.com/WordPress/WordPress.git\";\n\nfunction getLanguage(contentDir, language, callback) {\n\tvar files = {\n\t\t'': '%s.mo',\n\t\t'admin': 'admin-%s.mo',\n\t\t'admin/network': 'admin-network-%s.mo',\n\t\t'twentyeleven': path.join('themes', 'twentyeleven-%s.mo'),\n\t\t'twentytwelve': path.join('themes', 'twentytwelve-%s.mo'),\n\t\t'twentythirteen': path.join('themes', 'twentythirteen-%s.mo'),\n\t\t'twentyfourteen': path.join('themes', 'twentyfourteen-%s.mo'),\n\t};\n\n\tvar requested = complete = 0, errors = [];\n\tfor (var file in files) {\n\t\trequested++;\n\t\tdownloadLanguageFile(language, file, 'mo', function(err, res) {\n\t\t\tif (err) {\n\t\t\t\treturn errors.push(err);\n\t\t\t}\n\n\t\t\t// Pipe to  file\n\t\t\tvar p = path.join(contentDir, 'languages', util.format(files[file], language));\n\t\t\tvar f = fs.createWriteStream(p);\n\t\t\tres.pipe(f);\n\n\t\t\t// Complete\n\t\t\tres.on('end', function() {\n\t\t\t\tcomplete++;\n\t\t\t\tif (requested == complete) callback(errors.length ? null : errors);\n\t\t\t});\n\t\t});\n\t}\n\n};\n\nfunction downloadLanguageFile(language, file, format, callback) {\n\t// Build url with or without a file\n\tif (file && file != '') {\n\t\tvar url = util.format('/projects/wp/dev/%s/%s/default/export-translations?format=%s', file, language, format);\n\t} else {\n\t\tvar url = util.format('/projects/wp/dev/%s/default/export-translations?format=%s', language, format);\n\t}\n\n\t// Make request\n\thttp.get({\n\t\thostname: 'translate.wordpress.org',\n\t\tpath: url,\n\t}, function(res) {\n\t\t// Not found\n\t\tif (res.statusCode == 404) {\n\t\t\t// Retry with the language code with no region specifier\n\t\t\tif (language.indexOf('_') !== -1) {\n\t\t\t\t// es_ES => es\n\t\t\t\tlanguage = language.split('_')[0];\n\t\t\t\treturn downloadLanguageFile(language, file, format, callback);\n\t\t\t}\n\t\t\t// Not found\n\t\t\treturn callback(res);\n\t\t}\n\n\t\t// Success\n\t\tcallback(null, res);\n\t}).on('error', callback);\n};\n\nfunction getSaltKeys(callback) {\n\tvar ee = new EventEmitter(),\n\t\tkeys = '';\n\thttps.get(\"https://api.wordpress.org/secret-key/1.1/salt/\", function(res) {\n\t\tres.on('data', function(d) {\n\t\t\tkeys += d.toString();\n\t\t}).on('end', function() {\n\t\t\tee.emit('end', keys);\n\t\t});\n\t});\n\tif (typeof callback === 'function') {\n\t\tee.on('end', callback);\n\t}\n\treturn ee;\n};\n\nfunction getCurrentVersion(callback) {\n\tvar latestVersion = '3.8';\n\trequire('simple-git')().listRemote('--tags '+ wordpressRepo, function(err, tagsList) {\n\t\tif (err) return callback(err, latestVersion);\n\t\ttagList = ('' + tagsList).split('\\n');\n\t\ttagList.pop();\n\t\tlastTag = /\\d\\.\\d(\\.\\d)?/ig.exec(tagList.pop());\n\t\tif (lastTag !== null) {\n\t\t\tlatestVersion = lastTag[0];\n\t\t}\n\t\tcallback(null, latestVersion);\n\t});\n};\n\nfunction loadConfig() {\n\tvar ee = new EventEmitter();\n\n\tfunction readConfig(path) {\n\t\tfs.readFile(path, {encoding:'utf8'}, function(err, contents) {\n\t\t\tif (err) return ee.emit('error', err);\n\t\t\tee.emit('done', contents);\n\t\t});\n\t}\n\n\tfs.exists('wp-config.php', function(exists) {\n\t\tif (exists) {\n\t\t\treadConfig('wp-config.php');\n\t\t} else {\n\t\t\tfs.exists('../wp-config.php', function(exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\treadConfig('../wp-config.php');\n\t\t\t\t} else {\n\t\t\t\t\tee.emit('error', 'Config file does not exist.');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\treturn ee;\n};\n\nfunction getDbCredentials() {\n\tvar ee = new EventEmitter();\n\n\tloadConfig().on('done', function(contents) {\n\t\tvar db    = {};\n\t\tdb.name   = contents.match(/define\\([\"']DB_NAME[\"'],[\\s]*[\"'](.*)[\"']\\)/)[1];\n\t\tdb.user   = contents.match(/define\\([\"']DB_USER[\"'],[\\s]*[\"'](.*)[\"']\\)/)[1];\n\t\tdb.pass   = contents.match(/define\\([\"']DB_PASSWORD[\"'],[\\s]*[\"'](.*)[\"']\\)/)[1];\n\t\tdb.host   = contents.match(/define\\([\"']DB_HOST[\"'],[\\s]*[\"'](.*)[\"']\\)/)[1];\n\t\tdb.prefix = contents.match(/\\$table_prefix[\\s]*=[\\s]*[\"'](.*)[\"']/)[1];\n\n\t\tee.emit('done', db);\n\t}).on('error', function(err) {\n\t\tee.emit('error', err);\n\t});\n\n\treturn ee;\n};\n\nfunction createDBifNotExists(callback) {\n\tvar ee = new EventEmitter();\n\n\tgetDbCredentials().on('done', function(db) {\n\n\t\tvar connection = mysql.createConnection({\n\t\t\thost     : db.host,\n\t\t\tuser     : db.user,\n\t\t\tpassword : db.pass\n\t\t});\n\n\t\tconnection.connect(function(err) {\n\t\t\tif (err) return ee.emit('error', err);\n\n\t\t\tconnection.query('CREATE DATABASE IF NOT EXISTS ' + mysql.escapeId(db.name), function(err, rows, fields) {\n\t\t\t\tif (err) return ee.emit('error', err);\n\t\t\t\tconnection.end(function() {\n\t\t\t\t\tee.emit('done');\n\t\t\t\t});\n\t\t\t});\n\n\t\t});\n\n\t}).on('error', function(err) {\n\t\tee.emit('error', err);\n\t});\n\n\tif (typeof callback === 'function') {\n\t\tee.on('done', callback);\n\t}\n\n\treturn ee;\n};\n\nfunction getContentDir() {\n\tvar ee = new EventEmitter();\n\n\tfunction checkSimpleContentLocations() {\n\t\tfs.exists('wp-content', function(exists) {\n\t\t\tif (exists) {\n\t\t\t\tfs.realpath('wp-content', function(err, p) {\n\t\t\t\t\tif (err) return ee.emit('error', err);\n\t\t\t\t\tee.emit('done', path.relative('.', p));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfs.exists('content', function(exists) {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tfs.realpath('content', function(err, p) {\n\t\t\t\t\t\t\tif (err) erroree.emit('error', err);\n\t\t\t\t\t\t\tee.emit('done', path.relative('.', p));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tee.emit('error', 'Cannot determine content directory.');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tloadConfig().on('done', function(contents) {\n\t\tvar matches = contents.match(/define\\([\"']WP_CONTENT_DIR[\"'],[\\s]*(.*)\\)/);\n\t\tif (matches && matches[1]) {\n\n\t\t\texec('php -r \"echo ' + matches[1] + ';\"', function(err, stdout) {\n\t\t\t\tif (err) return checkSimpleContentLocations();\n\n\t\t\t\tfs.exists(stdout, function(exists) {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tee.emit('done', path.relative('.', stdout));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcheckSimpleContentLocations();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t} else {\n\t\t\tcheckSimpleContentLocations();\n\t\t}\n\t}).on('error', function(err) {\n\t\tcheckSimpleContentLocations();\n\t});\n\n\treturn ee;\n};\n\nfunction installTheme(generator, config, done) {\n\n\tif (config.themeType == 'git') {\n\t\tgenerator.remote(config.themeUser, config.themeRepo, config.themeBranch, function(err, remote) {\n\t\t\tremote.directory('.', path.join(config.contentDir, 'themes', config.themeDir));\n\t\t\tdone();\n\t\t}, config.refreshRemote);\n\t} else if (config.themeType == 'tar') {\n\t\tgenerator.tarball(config.themeTarballUrl, path.join(config.contentDir, 'themes', config.themeDir), done);\n\t}\n\n};\n\nfunction setupTheme(generator, config, done) {\n\t\n\tconsole.log(chalk.green('Setting Up Theme'));\n\n\tvar themePath = path.join(config.contentDir, 'themes', config.themeDir),\n\t\tthemePackageJson = path.join(themePath, 'package.json');\n\n\tvar themeTaskFile = '',\n\t\tthemeTaskCmd = '';\n\n\tif (config.themeTaskRunner == 'grunt') {\n\t\tthemeTaskFile = 'Gruntfile.js',\n\t\tthemeTaskCmd = 'grunt';\n\t} else if (config.themeTaskRunner == 'gulp') {\n\t\tthemeTaskFile = 'gulpfile.js',\n\t\tthemeTaskCmd = 'gulp';\n\t}\n\n\tif (fs.existsSync(themePackageJson)) {\n\t\tvar oldDir = process.cwd();\n\t\tprocess.chdir(themePath);\n\t\tconsole.log(chalk.green('Installing Node Packages (be patient)'));\n\n\t\texec('npm install', function(err, stdout, stderr) {\n\t\t\tif (err) {\n\t\t\t\tconsole.error('Error installing packages', err, stdout, stderr);\n\t\t\t\treturn done();\n\t\t\t}\n\n\t\t\tif (fs.existsSync(themeTaskFile)) {\n\t\t\t\texec(themeTaskCmd + ' setup', function(err) {\n\t\t\t\t\tconsole.log(chalk.green('Theme setup!'));\n\t\t\t\t\tprocess.chdir(oldDir);\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(chalk.red(themeTaskFile + ' missing!'));\n\t\t\t\tprocess.chdir(oldDir);\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconsole.log(chalk.red('package.json missing!'));\n\t\tdone();\n\t}\n\n};\n\nfunction activateTheme(themeName, callback) {\n\tvar ee = new EventEmitter();\n\n\tgetDbCredentials().on('done', function(db) {\n\n\t\tvar connection = mysql.createConnection({\n\t\t\thost     : db.host,\n\t\t\tuser     : db.user,\n\t\t\tpassword : db.pass,\n\t\t\tdatabase : db.name\n\t\t});\n\n\t\tconnection.connect(function(err) {\n\t\t\tif (err) return ee.emit('error', err);\n\n\t\t\tvar q = [\n\t\t\t\t\"UPDATE \" + db.prefix + \"options\",\n\t\t\t\t\"SET option_value =  \"+ mysql.escape(themeName),\n\t\t\t\t\"WHERE option_name = 'template'\",\n\t\t\t\t\"OR option_name = 'stylesheet'\"\t\n\t\t\t].join('\\n');\n\n\t\t\tconnection.query(q, function(err, rows, fields) {\n\t\t\t\tif (err) return ee.emit('error', err);\n\t\t\t\tconnection.end(function() {\n\t\t\t\t\tee.emit('done');\n\t\t\t\t});\n\t\t\t});\n\n\t\t});\n\n\t});\n\n\tif (typeof callback === 'function') {\n\t\tee.on('done', callback);\n\t}\n\n\treturn ee;\n};\n\nmodule.exports = {\n\trepo : wordpressRepo,\n\tgetSaltKeys : getSaltKeys,\n\tgetCurrentVersion : getCurrentVersion,\n\tgetDbCredentials : getDbCredentials,\n\tcreateDBifNotExists : createDBifNotExists,\n\tloadConfig : loadConfig,\n\tgetContentDir : getContentDir,\n\tinstallTheme : installTheme,\n\tsetupTheme : setupTheme,\n\tactivateTheme : activateTheme,\n\tdownloadLanguageFile: downloadLanguageFile,\n\tgetLanguage: getLanguage,\n};\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/util/art.js":"var chalk = require('chalk');\n\n// Rainbow display\nvar rainbowColors = [\n\tchalk.red,\n\tchalk.yellow,\n\tchalk.green,\n\tchalk.blue,\n\tchalk.magenta\n];\nchalk.rainbow = function(str) {\n\tvar arStr = str.split(''),\n\t\tout = '';\n\tfor (var i in arStr) {\n\t\tif (arStr[i] == ' ' || arStr[i] == '\\t' || arStr[i] == '\\n')\n\t\t\tout += arStr[i];\n\t\telse\n\t\t\tout += rainbowColors[i % rainbowColors.length](arStr[i]);\n\t}\n\treturn out;\n};\n\nmodule.exports = {\n\twp : [\n\t\t'',\n\t\tchalk.bold.red('                     YeoPress'),\n\t\t'',\n\t\tchalk.grey('                 ..::::::::::::..'),\n\t\tchalk.grey('             .:::   ')  + chalk.cyan('::::::::::')                          + chalk.grey('   ::..'),\n\t\tchalk.grey('           .:    ')     + chalk.cyan(':::::::::::::::')                     + chalk.grey('    :..'),\n\t\tchalk.grey('         .:   ')        + chalk.cyan(':::::::::::::::::::::')               + chalk.grey('   :.'),\n\t\tchalk.grey('        .:  ')          + chalk.cyan('::::::::::::::::::::::')              + chalk.grey('     :..'),\n\t\tchalk.grey('       .:  ')           + chalk.cyan('::::::::::::::::::::::')              + chalk.grey('       ::.'),\n\t\tchalk.grey('      .:         ')     + chalk.cyan(':::          :::')                    + chalk.grey('        :..'),\n\t\tchalk.grey('     .:       ')        + chalk.cyan('::::::::     :::::::')                + chalk.grey('        :.'),\n\t\tchalk.grey('     :  ')              + chalk.cyan(':      :::::::      :::::::     :')   + chalk.grey('  :.'),\n\t\tchalk.grey('    .:  ')              + chalk.cyan('::     ::::::::     :::::::    ::')   + chalk.grey('  :.'),\n\t\tchalk.grey('    :: ')               + chalk.cyan('::::     :::::::      :::::::   :::') + chalk.grey(' ::'),\n\t\tchalk.grey('    :: ')               + chalk.cyan('::::     ::::::::     :::::::   :::') + chalk.grey(' ::'),\n\t\tchalk.grey('    :: ')               + chalk.cyan(':::::     :::::::      ::::::  ::::') + chalk.grey(' ::'),\n\t\tchalk.grey('    :: ')               + chalk.cyan(':::::     ::::::       ::::::  ::::') + chalk.grey(' :.'),\n\t\tchalk.grey('    .:  ')              + chalk.cyan(':::::     :::::  ::    ::::  ::::')   + chalk.grey('  :.'),\n\t\tchalk.grey('     :  ')              + chalk.cyan('::::::     :::   ::    ::::  ::::')   + chalk.grey('  :.'),\n\t\tchalk.grey('     .:  ')             + chalk.cyan(':::::     ::   :::     ::  ::::')     + chalk.grey('  :.'),\n\t\tchalk.grey('      .:  ')            + chalk.cyan(':::::        :::::    ::  :::')       + chalk.grey('  ::.'),\n\t\tchalk.grey('      .::  ')           + chalk.cyan('::::       ::::::       :::')         + chalk.grey('  ::.'),\n\t\tchalk.grey('        .:  ')          + chalk.cyan('::::     ::::::::     :::')           + chalk.grey('  ::.'),\n\t\tchalk.grey('         .:   ')        + chalk.cyan('::    :::::::::    ::')               + chalk.grey('   :.'),\n\t\tchalk.grey('          .::      ')   + chalk.cyan('::::::::::')                          + chalk.grey('      ::.'),\n\t\tchalk.grey('            ..::    ') + chalk.cyan('::::::::')                             + chalk.grey('    ::..'),\n\t\tchalk.grey('               ..:::..     ..:::..'),\n\t\tchalk.grey('                    ..:::::.. '),\n\t\t'',\n\t\tchalk.red('          A Yeoman Generator For WordPress'),\n\t\t''\n\t].join('\\n'),\n\tgo : chalk.rainbow([\n\t\t'  ',\n\t\t'   __   __  _______  ______    _______      _     _  _______      _______  _______    __ ',\n\t\t'  |  | |  ||       ||    _ |  |       |    | | _ | ||       |    |       ||       |  |  |',\n\t\t'  |  |_|  ||    ___||   | ||  |    ___|    | || || ||    ___|    |    ___||   _   |  |  |',\n\t\t'  |       ||   |___ |   |_||_ |   |___     |       ||   |___     |   | __ |  | |  |  |  |',\n\t\t'  |       ||    ___||    __  ||    ___|    |       ||    ___|    |   ||  ||  |_|  |  |__|',\n\t\t'  |   _   ||   |___ |   |  | ||   |___     |   _   ||   |___     |   |_| ||       |   __ ',\n\t\t'  |__| |__||_______||___|  |_||_______|    |__| |__||_______|    |_______||_______|  |__|',\n\t\t''\n\t].join('\\n')),\n\twawa : chalk.red([\n\t\t'',\n\t\t'____    __    ____  ___   ____    __    ____  ___       __   __ ',\n\t\t'\\\\   \\\\  /  \\\\  /   / /   \\\\  \\\\   \\\\  /  \\\\  /   / /   \\\\     |  | |  |',\n\t\t' \\\\   \\\\/    \\\\/   / /  ^  \\\\  \\\\   \\\\/    \\\\/   / /  ^  \\\\    |  | |  |',\n\t\t'  \\\\            / /  /_\\\\  \\\\  \\\\            / /  /_\\\\  \\\\   |  | |  |',\n\t\t'   \\\\    /\\\\    / /  _____  \\\\  \\\\    /\\\\    / /  _____  \\\\  |__| |__|',\n\t\t'    \\\\__/  \\\\__/ /__/     \\\\__\\\\  \\\\__/  \\\\__/ /__/     \\\\__\\\\ (__) (__)',\n\t\t'',\n\t\t'                 Game over....try again.',\n\t\t''\n\t].join('\\n'))\n};\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/util/log.js":"var util = require('util'),\n\tchalk = require('chalk');\n\n// Utility extend\nfunction extend(obj) {\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tif (args[i]) {\n\t\t\tfor (var prop in args[i]) {\n\t\t\t\tobj[prop] = args[i][prop];\n\t\t\t}\n\t\t}\n\t}\n    return obj;\n};\n\n// The supported severity levels\nvar severityLevels = ['verbose', 'log', 'warn', 'error'];\n\nvar Logger = function(options) {\n\tif (!(this instanceof Logger)) return new Logger(options);\n\tthis.options = extend({}, Logger.defaultOptions, options);\n};\n\nLogger.defaultOptions = {\n\tlevel               : 'error',\n\tverbosePrefix       : '>> ',\n\tverbosePrefixTheme  : chalk.gray.bold,\n\tverboseMessageTheme : chalk.white,\n\tverboseStream       : process.stdout,\n\tlogPrefix           : '>> ',\n\tlogPrefixTheme      : chalk.cyan.bold,\n\tlogMessageTheme     : chalk.white,\n\tlogStream           : process.stdout,\n\twarnPrefix          : '>> ',\n\twarnPrefixTheme     : chalk.yellow.bold,\n\twarnMessageTheme    : chalk.white,\n\twarnStream          : process.stdout,\n\terrorPrefix         : 'Error: ',\n\terrorPrefixTheme    : chalk.red.bold,\n\terrorMessageTheme   : chalk.red,\n\terrorStream         : process.stderr\n};\n\nseverityLevels.forEach(function(fnc) {\n\tLogger.prototype[fnc] = function(out, opts) {\n\t\tif (severityLevels.indexOf(fnc) >= severityLevels.indexOf(this.options.level)) {\n\t\t\topts = extend({}, this.options, opts);\n\t\t\tvar prefix = opts[fnc + 'PrefixTheme'](opts[fnc + 'Prefix']);\n\n\t\t\tvar message;\n\t\t\tif (typeof out === 'object') {\n\t\t\t\tmessage = opts[fnc + 'MessageTheme'](util.inspect(out));\n\t\t\t} else {\n\t\t\t\tmessage = opts[fnc + 'MessageTheme'](out+'');\n\t\t\t}\n\n\t\t\tif (typeof opts[fnc + 'Stream'] === 'function') {\n\t\t\t\topts[fnc + 'Stream'].write(prefix + message);\n\t\t\t} else if (typeof console[fnc] === 'function') {\n\t\t\t\tconsole[fnc](prefix + message);\n\t\t\t} else {\n\t\t\t\tconsole.log(prefix + message);\n\t\t\t}\n\t\t}\n\t};\n});\n\nmodule.exports = Logger;\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/util/config.js":"/**================================\n * YeoPress config wrapper\n **===============================*/\n\n// Requirements\nvar fs = require('fs'),\n\tpath = require('path');\n\n// Constructor\nvar Config = module.exports = function(locals, globals) {\n\t// Default config file name\n\tthis.filename = '.yeopress';\n\n\t// Load files\n\tthis.global = this.load(path.join(process.env.HOME  || process.env.USERPROFILE, this.filename)) || {};\n\tthis.local = this.load() || {};\n\n\t// Set initial data\n\tif (locals) this.set(locals);\n\tif (globals) this.setGlobal(globals);\n};\n\n// Set local config values\nConfig.prototype.set = function(key, val) {\n\tif (typeof val !== 'undefined') {\n\t\t// Set a single key\n\t\tthis.local[key] = val;\n\t} else {\n\t\t// Set multiple keys\n\t\tfor (var i in key) this.local[i] = key[i];\n\t}\n};\n\n// Set global config values\nConfig.prototype.setGlobal = function(key, val) {\n\tif (typeof val !== 'undefined') {\n\t\t// Set a single key\n\t\tthis.global[key] = val;\n\t} else {\n\t\t// Set multiple keys\n\t\tfor (var i in key) this.global[i] = key[i];\n\t}\n};\n\n// Get config values, locals first\nConfig.prototype.get = function(key) {\n\t// Get a single key\n\tif (key) {\n\t\tif (typeof this.local[key] !== 'undefined') {\n\t\t\treturn this.local[key];\n\t\t}\n\t\tif (typeof this.global[key] !== 'undefined') {\n\t\t\treturn this.global[key];\n\t\t}\n\t\treturn;\n\t}\n\n\t// Get all data\n\tvar data = {};\n\tfor (var g in this.global) data[g] = this.global[g];\n\tfor (var l in this.local) data[l] = this.local[l];\n\treturn data;\n};\n\n// Write the config to file\nConfig.prototype.write = function(filepath, data) {\n\tfilepath = filepath || this.filename;\n\tdata = data || this.get();\n\tfs.writeFileSync(filepath, JSON.stringify(data, null, '\\t'));\n};\n\n// Load a config file\nConfig.prototype.load = function(filepath) {\n\tfilepath = filepath || this.filename;\n\tif (fs.existsSync(filepath)) {\n\t\tvar content = fs.readFileSync(filepath, {encoding: 'utf8'});\n\t\treturn JSON.parse(content);\n\t}\n\treturn null;\n};\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/Gruntfile.js":"module.exports = function(grunt) {\n\n\t// Configuration\n\tgrunt.initConfig({\n\n\t\tclean: {\n\t\t\tsite: ['test/site/*', 'test/site/.*', '!test/site/.gitkeep'],\n\t\t\ttest: ['test/tmp'],\n\t\t\tcache: {\n\t\t\t\toptions: {force: true},\n\t\t\t\tsrc: [\n\t\t\t\t\t// Wordpress\n\t\t\t\t\tprocess.env.HOME + '/.yeoman/cache/wordpress',\n\t\t\t\t\t// Yeopress default theme\n\t\t\t\t\tprocess.env.HOME + 'wesleytodd/YeoPress'\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\n\t\tconnect: {\n\t\t\tcoverage: {\n\t\t\t\toptions: {\n\t\t\t\t\tport: 9001,\n\t\t\t\t\tkeepalive: true,\n\t\t\t\t\tbase: 'test/coverage/lcov-report',\n\t\t\t\t\topen: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsimplemocha: {\n\t\t\tunit: {\n\t\t\t\tsrc: ['test/unit/*.js']\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// Run the test and generate the coverage report\n\tgrunt.registerTask('istanbul', function() {\n\t\tvar done = this.async();\n\t\trequire('child_process').exec('npm run-script test --coverage', function(err, stdout, stderr) {\n\t\t\tconsole.error(stderr);\n\t\t\tconsole.log(stdout);\n\t\t\tconsole.log('\\n\\nView test coverage here:');\n\t\t\tconsole.log('---------------------------');\n\t\t\tconsole.log('http://localhost:9001');\n\t\t\tdone();\n\t\t});\n\t});\n\n\t// Register composite tasks\n\tgrunt.util._({\n\t\t'default': ['watch'],\n\t\t'coverage': ['istanbul', 'connect:coverage']\n\t}).map(function(task, name) {\n\t\tgrunt.registerTask(name, task);\n\t});\n\n\t// Register npm tasks\n\t[\n\t\t'grunt-contrib-clean',\n\t\t'grunt-contrib-connect',\n\t\t//'grunt-contrib-watch',\n\t\t'grunt-simple-mocha'\n\t].forEach(grunt.loadNpmTasks);\n\n}\n","/home/travis/build/npmtest/node-npmtest-generator-wordpress/node_modules/generator-wordpress/app/prompts.js":"module.exports = function(advanced, defaults) {\n\n\t// Validate required\n\tvar requiredValidate = function(value) {\n\t\tif (value == '') {\n\t\t\treturn 'This field is required.';\n\t\t}\n\t\treturn true;\n\t};\n\t// When advanced\n\tvar advancedWhen = function() {\n\t\treturn advanced;\n\t};\n\n\treturn [\n\t\t{\n\t\t\tmessage: 'WordPress URL',\n\t\t\tname: 'url',\n\t\t\tdefault: defaults.url || null,\n\t\t\tvalidate: requiredValidate,\n\t\t\tfilter: function(value) {\n\t\t\t\tvalue = value.replace(/\\/+$/g, '');\n\t\t\t\tif (!/^http[s]?:\\/\\//.test(value)) {\n\t\t\t\t\tvalue = 'http://' + value;\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'WordPress Version',\n\t\t\tname: 'wpVer',\n\t\t\tdefault: defaults.wpVer || null,\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: advancedWhen,\n\t\t}, {\n\t\t\tmessage: 'Table prefix',\n\t\t\tname: 'tablePrefix',\n\t\t\tdefault: defaults.tablePrefix || 'wp_',\n\t\t\tvalidate: requiredValidate\n\t\t}, {\n\t\t\tmessage: 'Database host',\n\t\t\tname: 'dbHost',\n\t\t\tdefault: defaults.dbHost || 'localhost',\n\t\t\tvalidate: requiredValidate\n\t\t}, {\n\t\t\tmessage: 'Database name',\n\t\t\tname: 'dbName',\n\t\t\tdefault: defaults.dbName || null,\n\t\t\tvalidate: requiredValidate\n\t\t}, {\n\t\t\tmessage: 'Database user',\n\t\t\tname: 'dbUser',\n\t\t\tdefault: defaults.dbUser || null,\n\t\t\tvalidate: requiredValidate\n\t\t}, {\n\t\t\tmessage: 'Database password',\n\t\t\tname: 'dbPass',\n\t\t\tdefault: defaults.dbPass || null\n\t\t}, {\n\t\t\tmessage: 'Language',\n\t\t\tname: 'wpLang',\n\t\t\tdefault: defaults.wplang || null,\n\t\t\twhen: advancedWhen,\n\t\t}, {\n\t\t\tmessage: 'Use Git?',\n\t\t\tname: 'git',\n\t\t\tdefault: defaults.git || false,\n\t\t\ttype: 'confirm'\n\t\t}, {\n\t\t\tmessage: 'Would you like to install WordPress as a submodule?',\n\t\t\tname: 'submodule',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.submodule || false,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.git;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Would you like to install WordPress with the custom directory structure?',\n\t\t\tname: 'customDirs',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.customDirs || false,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !res.git || !res.submodule;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'WordPress install directory',\n\t\t\tname: 'wpDir',\n\t\t\tdefault: defaults.wpDir || 'wordpress',\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.submodule || !!res.customDirs;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'WordPress content directory',\n\t\t\tname: 'contentDir',\n\t\t\tdefault: defaults.contentDir || 'content',\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.submodule || !!res.customDirs;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Create local-config.php?',\n\t\t\tname: 'createLocalConfig',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.createLocalConfig || false,\n\t\t\twhen: advancedWhen\n\t\t}, {\n\t\t\tmessage: 'Block external WP requests?',\n\t\t\tname: 'blockExternalRequests',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.blockExternalRequests || false,\n\t\t\twhen: advancedWhen\n\t\t}, {\n\t\t\tmessage: 'Add wp-config.php to .gitignore?',\n\t\t\tname: 'ignoreWPConfig',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.ignoreWPConfig || false,\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn (advanced && !!res.git);\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Add WordPress Core files to .gitignore?',\n\t\t\tname: 'ignoreWPCore',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.ignoreWPCore || false,\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn (advancedWhen() && !!res.git);\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Use Vagrant?',\n\t\t\tname: 'vagrant',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.vagrant || false,\n\t\t\twhen: advancedWhen,\n\t\t\tvalidate: requiredValidate\n\t\t}, {\n\t\t\tmessage: 'Install a custom theme?',\n\t\t\tname: 'installTheme',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: (typeof defaults.installTheme !== 'undefined') ? defaults.installTheme : true\n\t\t}, {\n\t\t\tmessage: 'Destination directory',\n\t\t\tname: 'themeDir',\n\t\t\tdefault: defaults.themeDir || 'yeopress',\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.installTheme;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Theme source type (git/tar)',\n\t\t\tname: 'themeType',\n\t\t\tdefault: defaults.themeType || 'git',\n\t\t\tvalidate: function(value) {\n\t\t\t\tif (value != '' && /^(?:git|tar)$/i.test(value)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tfilter: function(value) {\n\t\t\t\treturn value.toLowerCase();\n\t\t\t},\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.installTheme;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Task runner (grunt/gulp)',\n\t\t\tname: 'themeTaskRunner',\n\t\t\tdefault: defaults.themeTaskRunner || 'grunt',\n\t\t\tvalidate: function(value) {\n\t\t\t\tif (value != '' && /^(?:grunt|gulp)$/i.test(value)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tfilter: function(value) {\n\t\t\t\treturn value.toLowerCase();\n\t\t\t},\n\t\t\twhen: function(res) {\n\t\t\t\treturn !! res.installTheme;\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'GitHub username',\n\t\t\tname: 'themeUser',\n\t\t\tdefault: defaults.themeUser || 'wesleytodd',\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.installTheme && res.themeType == 'git';\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'GitHub repository name',\n\t\t\tname: 'themeRepo',\n\t\t\tdefault: defaults.themeRepo || 'YeoPress',\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.installTheme && res.themeType == 'git';\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Repository branch',\n\t\t\tname: 'themeBranch',\n\t\t\tdefault: defaults.themeBranch || 'template',\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.installTheme && res.themeType == 'git';\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Refresh remote (busts potentially cached theme)',\n\t\t\tname: 'refreshRemote',\n\t\t\ttype: 'confirm',\n\t\t\tdefault: defaults.refreshRemote || true,\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn advanced && !!res.installTheme && res.themeType == 'git';\n\t\t\t}\n\t\t}, {\n\t\t\tmessage: 'Remote tarball url',\n\t\t\tname: 'themeTarballUrl',\n\t\t\tdefault: defaults.themeTarballUrl || 'https://github.com/wesleytodd/YeoPress/archive/template.tar.gz',\n\t\t\tvalidate: requiredValidate,\n\t\t\twhen: function(res) {\n\t\t\t\treturn !!res.installTheme && res.themeType == 'tar';\n\t\t\t}\n\t\t}\n\t];\n};\n"}